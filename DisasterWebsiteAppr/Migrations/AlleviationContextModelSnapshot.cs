// <auto-generated />
using System;
using DisasterWebsiteAppr.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DisasterWebsiteAppr.Migrations
{
    [DbContext(typeof(AlleviationContext))]
    partial class AlleviationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DisasterWebsiteAppr.Models.Category", b =>
                {
                    b.Property<int>("CId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DisasterWebsiteAppr.Models.Disaster", b =>
                {
                    b.Property<int>("DisasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Allocation")
                        .HasColumnType("float");

                    b.Property<int>("CId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryCId")
                        .HasColumnType("int");

                    b.Property<string>("DName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ended")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Started")
                        .HasColumnType("datetime2");

                    b.HasKey("DisasterId");

                    b.HasIndex("CategoryCId");

                    b.ToTable("Disasters");
                });

            modelBuilder.Entity("DisasterWebsiteAppr.Models.Donation", b =>
                {
                    b.Property<int>("Donationid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("CategoryCId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisasterId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Goods")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isPrivate")
                        .HasColumnType("bit");

                    b.HasKey("Donationid");

                    b.HasIndex("CategoryCId");

                    b.HasIndex("DisasterId");

                    b.HasIndex("UserId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("DisasterWebsiteAppr.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DisasterWebsiteAppr.Models.Disaster", b =>
                {
                    b.HasOne("DisasterWebsiteAppr.Models.Category", "Category")
                        .WithMany("Disasters")
                        .HasForeignKey("CategoryCId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DisasterWebsiteAppr.Models.Donation", b =>
                {
                    b.HasOne("DisasterWebsiteAppr.Models.Category", null)
                        .WithMany("Donations")
                        .HasForeignKey("CategoryCId");

                    b.HasOne("DisasterWebsiteAppr.Models.Disaster", "Disaster")
                        .WithMany()
                        .HasForeignKey("DisasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisasterWebsiteAppr.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Disaster");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DisasterWebsiteAppr.Models.Category", b =>
                {
                    b.Navigation("Disasters");

                    b.Navigation("Donations");
                });
#pragma warning restore 612, 618
        }
    }
}
